<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="impl-post-suite.xml" />
	<munit:test name="post:\accounts:application\json:accounts-papi-config-impl-test" doc:id="02da1161-2c60-463e-95a7-d58b75d5f5a9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request_firstlookup" doc:id="d6423e13-0885-4adb-8cd0-fe0f882722b7" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f96061b1-40b8-44b8-b911-857491b1b1c1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_.dwl')]" />
						<munit-tools:variable key="iso" value="#[output application/json --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="payload" value="#[output application/json --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="response" value="#[output application/json --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="id" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_4.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Request" doc:id="28a7a4b1-ebe4-4b4a-b452-8946c8c7400d" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3b5f6231-9aaf-452b-807d-76aa1f26dd06" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_payload1.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_5.dwl')]" />
						<munit-tools:variable key="iso" value="#[output application/json --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_6.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="payload" value="#[output application/json --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_7.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="response" value="#[output application/json --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_8.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="id" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\mock_variable_9.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6d89e3f1-f929-40c3-a87a-ed22d97f5e65" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\set-event_variable_.dwl')]" />
					<munit:variable key="id" value="#[readUrl('classpath://postaccountsapplicationjsonaccountspapiconfigimpltest\set-event_variable_1.dwl')]" encoding="UTF-8" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\accounts:application\json:accounts-papi-config-impl" doc:id="eb0036dc-823d-49a1-80b0-10d8de97271e" name="post:\accounts:application\json:accounts-papi-config-impl"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f0ec954c-781f-4fb4-a86a-6b2c4d80a145" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postaccountsapplicationjsonaccountspapiconfigimpltest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
